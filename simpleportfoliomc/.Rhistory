shiny::runApp()
?sample
max.int
max.int()
.Machine
.Machine$integer.max
.Machine$integer.min
-.Machine$integer.min
-(.Machine$integer.min)
x <- .Machine$integer.min
-x
-1 * x
x
x <- .Machine$integer.max
x
- x
-x:x
?set.seed
set.seed()
runApp()
runApp()
rsconnect::setAccountInfo(name='timolin', token='0D9FF64FC1360DD13A007494468E90CF', secret='8g4qDKwecjwdcTszAfuKhO58gehYiFmMZcZrHJjQ')
library(rsconnect)
deployApp()
deployApp()
library(data.table)
library(ggplot2)
normSim <- function(mu, s, nyear, nsim) {
## The size of the matrix
N = nyear * nsim
## Generate returns
r = rnorm(n=N, mean=mu, sd=s)
## organize as a nyear x nsim matrix
R <- matrix((1 + r), nrow=nyear)
## The cumulative returns over the specified horizon
#returns <- apply(R, 2, prod)
}
m <- normSim(0.05, 0.2, 20, 1000)
cm <- apply(m, 2, cumprod) * 1000
dt <- data.table(cm)
dt[, yr := 1:20]
dt.long <- melt(dt, id.vars = "yr", value.name = "cumprod", variable.name = "sim_id")
dt.long[, max(cumprod)]
pl <- ggplot(dt.long) + geom_line(aes(as.factor(yr), cumprod, group=1))
(pl)
pl <- ggplot(dt.long) + geom_line(aes(as.factor(yr), cumprod, group=sim_id))
(pl)
pl <- ggplot(dt.long) + geom_line(aes(as.factor(yr), cumprod, color=sim_id, group=sim_id))
(pl)
pl <- ggplot(dt.long) + geom_line(aes(as.factor(yr), cumprod, color=sim_id, group=sim_id)) + guides(color=F)
(pl)
shiny::runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
